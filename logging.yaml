version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  json:
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s", "module": "%(module)s", "function": "%(funcName)s", "line": %(lineno)d}'
    datefmt: "%Y-%m-%dT%H:%M:%S"
  
  detailed:
    format: "%(asctime)s [%(levelname)s] %(name)s in %(module)s.%(funcName)s:%(lineno)d: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
  
  file_info:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_error:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_access:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/access.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  file_audit:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/audit.log
    maxBytes: 10485760  # 10MB
    backupCount: 20
    encoding: utf8
  
  file_performance:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/performance.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  # FastAPI access logs
  uvicorn.access:
    level: INFO
    handlers: [file_access]
    propagate: false
  
  # Application loggers
  app:
    level: INFO
    handlers: [console, file_info, file_error]
    propagate: false
  
  app.api:
    level: INFO
    handlers: [console, file_info]
    propagate: false
  
  app.domain:
    level: INFO
    handlers: [console, file_info]
    propagate: false
  
  app.infrastructure:
    level: INFO
    handlers: [console, file_info]
    propagate: false
  
  # Database logs
  sqlalchemy:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  # Celery logs
  celery:
    level: INFO
    handlers: [console, file_info]
    propagate: false
  
  celery.task:
    level: INFO
    handlers: [file_info]
    propagate: false
  
  # Redis logs
  redis:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  # AI model logs
  transformers:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  torch:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  # Performance monitoring
  performance:
    level: INFO
    handlers: [file_performance]
    propagate: false
  
  # Audit logs for security events
  audit:
    level: INFO
    handlers: [file_audit]
    propagate: false
  
  # Third-party libraries
  httpx:
    level: WARNING
    handlers: [file_error]
    propagate: false
  
  urllib3:
    level: WARNING
    handlers: [file_error]
    propagate: false

root:
  level: INFO
  handlers: [console, file_info, file_error]